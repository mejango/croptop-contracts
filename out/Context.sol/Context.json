{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000000},\"remappings\":[\":@bananapus/=node_modules/@bananapus/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@bananapus/=node_modules/@bananapus/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@uniswap/=node_modules/@uniswap/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":100000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/Context.sol":"Context"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","id":52454,"exportedSymbols":{"Context":[52453]},"nodeType":"SourceUnit","src":"101:862:90","nodes":[{"id":52425,"nodeType":"PragmaDirective","src":"101:24:90","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":52453,"nodeType":"ContractDefinition","src":"624:338:90","nodes":[{"id":52435,"nodeType":"FunctionDefinition","src":"656:96:90","nodes":[],"body":{"id":52434,"nodeType":"Block","src":"718:34:90","nodes":[],"statements":[{"expression":{"expression":{"id":52431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:90","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":52432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:90","memberName":"sender","nodeType":"MemberAccess","src":"735:10:90","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":52430,"id":52433,"nodeType":"Return","src":"728:17:90"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:90","parameters":{"id":52427,"nodeType":"ParameterList","parameters":[],"src":"675:2:90"},"returnParameters":{"id":52430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52435,"src":"709:7:90","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52428,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:90","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:90"},"scope":52453,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":52444,"nodeType":"FunctionDefinition","src":"758:99:90","nodes":[],"body":{"id":52443,"nodeType":"Block","src":"825:32:90","nodes":[],"statements":[{"expression":{"expression":{"id":52440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:90","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":52441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:90","memberName":"data","nodeType":"MemberAccess","src":"842:8:90","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":52439,"id":52442,"nodeType":"Return","src":"835:15:90"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:90","parameters":{"id":52436,"nodeType":"ParameterList","parameters":[],"src":"775:2:90"},"returnParameters":{"id":52439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52444,"src":"809:14:90","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52437,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:90","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:90"},"scope":52453,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":52452,"nodeType":"FunctionDefinition","src":"863:97:90","nodes":[],"body":{"id":52451,"nodeType":"Block","src":"935:25:90","nodes":[],"statements":[{"expression":{"hexValue":"30","id":52449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:90","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":52448,"id":52450,"nodeType":"Return","src":"945:8:90"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:90","parameters":{"id":52445,"nodeType":"ParameterList","parameters":[],"src":"892:2:90"},"returnParameters":{"id":52448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52452,"src":"926:7:90","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52446,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:90","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:90"},"scope":52453,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":52426,"nodeType":"StructuredDocumentation","src":"127:496:90","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[52453],"name":"Context","nameLocation":"642:7:90","scope":52454,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":90}